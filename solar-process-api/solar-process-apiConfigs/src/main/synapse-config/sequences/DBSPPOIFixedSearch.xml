<?xml version="1.0" encoding="UTF-8"?>
<sequence name="DBSPPOIFixedSearch" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <propertyGroup>
        <property expression="get-property('query.param.language')" name="language" scope="default" type="STRING"/>
        <property expression="get-property('query.param.regionid')" name="regionid" scope="default" type="STRING"/>
        <property expression="get-property('query.param.cityname')" name="cityalias" scope="default" type="STRING"/>
        <property expression="get-property('query.param.zipcode')" name="zipcode" scope="default" type="STRING"/>
        <property expression="get-property('query.param.districtname')" name="districtalias" scope="default" type="STRING"/>
        <property expression="get-property('query.param.servicesubcategoryid')" name="servicetype" scope="default" type="STRING"/>
        <property expression="get-property('query.param.servicestring')" name="servicename" scope="default" type="STRING"/>
        <property expression="get-property('query.param.servicecategoryid')" name="category" scope="default" type="STRING"/>
        <property expression="get-property('query.param.cityid')" name="cityids" scope="default" type="STRING"/>
        <property expression="get-property('query.param.districtid')" name="districtid" scope="default" type="STRING"/>
        <property expression="get-property('query.param.page')" name="pageNumber" scope="default" type="STRING"/>
        <property expression="get-property('query.param.pageSize')" name="pageSize" scope="default" type="STRING"/>
        <property expression="get-property('query.param.format')" name="format" scope="default" type="STRING"/>
        <property expression="get-property('query.param.encode')" name="encode" scope="default" type="STRING"/>
    </propertyGroup>
    <propertyGroup>
        <property name="CommonLogFlowId" scope="default" type="STRING" value="poi-fixed-params"/>
        <property name="CommonLogInQueue" scope="default" type="STRING" value="GET -/Address/poi-fixed-params"/>
        <property expression="get-property('MessageID')" group="3" name="CommonLogLoggingId" pattern="((urn|uuid):)*(.*)" scope="default" type="STRING"/>
        <property expression="get-property('correlation_id')" name="CommonLogLoggingId2" scope="default" type="STRING"/>
        <property name="CommonLogMessageType" scope="default" type="STRING" value="application/json"/>
        <property name="CommonLogOutQueue" scope="default" type="STRING" value="GET -/Address/poi-fixed-params"/>
    </propertyGroup>
    <call-template description="Common Log Templete" target="mi-CommonLog">
        <with-param name="flowId" value="{$ctx:CommonLogFlowId}"/>
        <with-param name="inQueue" value="{$ctx:CommonLogInQueue}"/>
        <with-param name="loggingId" value="{$ctx:CommonLogLoggingId}"/>
        <with-param name="loggingId2" value="{$ctx:CommonLogLoggingId2}"/>
        <with-param name="messageType" value="{$ctx:CommonLogMessageType}"/>
        <with-param name="contentType" value="application/json"/>
    </call-template>
    <filter xpath="$ctx:language='E'">
        <then>
            <property name="language" scope="transport" type="STRING" value="E"/>
        </then>
        <else>
            <property name="language" scope="transport" type="STRING" value="A"/>
        </else>
    </filter>
    <payloadFactory media-type="json">
        <format>{&#xd;
    "language": "$1",&#xd;
    "regionid": "$2",&#xd;
    "cityalias": "$3",&#xd;
    "zipcode": "$4",&#xd;
    "districtalias": "$5",&#xd;
    "servicetype": "$6",&#xd;
    "servicename": "$7",&#xd;
    "category": "$8",&#xd;
    "cityids": "$9",&#xd;
    "districtid": "$10",&#xd;
    "pageNumber": "$11",&#xd;
    "pageSize": "$12"&#xd;
}</format>
        <args>
            <arg evaluator="xml" expression="$ctx:language"/>
            <arg evaluator="xml" expression="$ctx:regionid"/>
            <arg evaluator="xml" expression="$ctx:cityalias"/>
            <arg evaluator="xml" expression="$ctx:zipcode"/>
            <arg evaluator="xml" expression="$ctx:districtalias"/>
            <arg evaluator="xml" expression="$ctx:servicetype"/>
            <arg evaluator="xml" expression="$ctx:servicename"/>
            <arg evaluator="xml" expression="$ctx:category"/>
            <arg evaluator="xml" expression="$ctx:cityids"/>
            <arg evaluator="xml" expression="$ctx:districtid"/>
            <arg evaluator="xml" expression="$ctx:pageNumber"/>
            <arg evaluator="xml" expression="$ctx:pageSize"/>
        </args>
    </payloadFactory>
    <log level="full" separator=" --CheckBeforeSysAPI-- "/>
    <call-template description="Common Log Templete" target="mi-CommonLog">
        <with-param name="flowId" value="{$ctx:CommonLogFlowId}"/>
        <with-param name="inQueue" value="{$ctx:CommonLogInQueue}"/>
        <with-param name="outQueue" value="{$ctx:CommonLogOutQueue}"/>
        <with-param name="loggingId" value="{$ctx:CommonLogLoggingId}"/>
        <with-param name="loggingId2" value="{$ctx:CommonLogLoggingId2}"/>
        <with-param name="messageType" value="{$ctx:CommonLogMessageType}"/>
        <with-param name="contentType" value="application/json"/>
    </call-template>
    <call>
        <endpoint key="DBSPPOIFixedSearchSys_EP"/>
    </call>
    <log level="full" separator=" --CheckSysAPIResp-- "/>
    <call-template description="Common Log Templete" target="mi-CommonLog">
        <with-param name="flowId" value="{$ctx:CommonLogFlowId}"/>
        <with-param name="inQueue" value="{$ctx:CommonLogOutQueue}"/>
        <with-param name="outQueue" value="{$ctx:CommonLogInQueue}"/>
        <with-param name="loggingId" value="{$ctx:CommonLogLoggingId}"/>
        <with-param name="loggingId2" value="{$ctx:CommonLogLoggingId2}"/>
        <with-param name="messageType" value="{$ctx:CommonLogMessageType}"/>
        <with-param name="contentType" value="application/json"/>
    </call-template>
    <log level="full" separator=" --AfterProScript-- "/>
    <script language="js"><![CDATA[var payload = mc.getPayloadJSON();
var Service=[];

var Services = {
	"totalSearchResults": payload.TotalSearchCount,
 "Addresses": Service,
    "PostCode": null,
    "success": true,
    "result": null,
    "statusdescription": "SUCCESS",
    "fullexception": null
 };

if(Object.keys(payload.Service).length > 0)
{
 	Service = constructParcel();
}

else
{
var Services = {
	"totalSearchResults": "0",
 "Addresses": null,
    "PostCode": null,
    "success": true,
    "result": null,
    "statusdescription": "NO-RESULTS",
    "fullexception": null
 };


}

mc.setPayloadJSON(Services);

 function constructParcel() {

for (i = 0; i < payload.Service.length; ++i)
{
d = payload.Service[i];

var data = {
 Title: (null != d.alias? d.alias:"" ),
 Address1: ((null != d.buildingnumber? d.buildingnumber:"")+" "+(null != d.streetname? d.streetname:"")+" - "+(null != d.districtname? d.districtname:"")),
 Address2: ((null != d.cityname? d.cityname:"")+" "+(null != d.zipcode? d.zipcode:"")+(d.additionalnumber != ""? (" - "+d.additionalnumber):"")),
 ObjLatLng: ((null != d.objectid? d.objectid:"")+" "+(null != d.centroidx? d.centroidx:"")+" "+(null != d.centroidy? d.centroidy:"")+" "+(null != d.minx? d.minx:"")+" "+(null != d.miny? d.miny:"")+" "+(null != d.maxx? d.maxx:"")+" "+(null != d.maxy? d.maxy:"")),
 BuildingNumber: ( null != d.buildingnumber?d.buildingnumber :""),
 Street: (null != d.streetname? d.streetname:""),
 District: ( null != d.districtname?d.districtname:""),
 City: ( null != d.cityname?d.cityname:""),
 PostCode: (null != d.zipcode ? d.zipcode :""),
 AdditionalNumber: (null != d.additionalnumber? d.additionalnumber:""),
 RegionName: ( null != d.regionname?d.regionname:""),
 PolygonString: (null != d.polygonwkt? d.polygonwkt:""),
 IsPrimaryAddress: ( null != d.isprimaryaddress?d.isprimaryaddress :""),
 UnitNumber: ( null != d.unitnumber?d.unitnumber :""),
 Longitude: (null != d.centroidx?d.centroidx :""),
 Latitude: (null != d.centroidy?d.centroidy :""),
 CityId: (null != d.cityid? d.cityid:""),
 RegionId: (null != d.regionid? d.regionid:""),
 Restriction: (null != d.restriction? d.restriction:""),
 PKAddressID: (null != d.PKAddressID? d.PKAddressID:""),
 DistrictID: (null != d.districtid? d.districtid:""),
 Title_L2: ( null != d.alias_E?d.alias_E :""),
 RegionName_L2: ( null != d.regionname_E?d.regionname_E :""),
 City_L2: ( null != d.cityname_E?d.cityname_E :""),
 Street_L2: ( null != d.streetname_E?d.streetname_E :""),
 District_L2: ( null !=d.districtname_E?d.districtname_E :""),
 CompanyName_L2: ( null !=d.companyname_E?d.companyname_E:""),
 GovernorateID: (null != d.governorateid? d.governorateid:""),
 Governorate: ( null != d.governoratename?d.governoratename :""),
 Governorate_L2: ( null != d.governoratename_E?d.governoratename_E :""),
 objectid: (null !=d.objectid? d.objectid:""),
 ShortAddress: (null != d.ShortAddress? d.ShortAddress:""), 
 InternationalWasel: (null != d.InternationalWasel? d.InternationalWasel:"")
}

Service.push(data);
}
 return Service;
}]]></script>
    <filter regex="xml" source="$ctx:format">
        <then>
            <payloadFactory media-type="json">
                <format>{&#xd;
    "totalSearchResults": "$1",&#xd;
    "Address": $2,&#xd;
    "PostCode": "$3",&#xd;
    "success": "$4",&#xd;
    "datasetOrdatatable": "$5",&#xd;
    "result": "$6",&#xd;
    "statusdescription": "$7",&#xd;
    "fullexception": "$8"&#xd;
}</format>
                <args>
                    <arg evaluator="json" expression="$.totalSearchResults"/>
                    <arg evaluator="json" expression="$.Addresses"/>
                    <arg evaluator="xml" expression="$ctx:PostCode"/>
                    <arg evaluator="xml" expression="$ctx:success"/>
                    <arg evaluator="xml" expression="$ctx:datasetOrdatatable"/>
                    <arg evaluator="xml" expression="$ctx:result"/>
                    <arg evaluator="xml" expression="$ctx:statusdescription"/>
                    <arg evaluator="xml" expression="$ctx:fullexception"/>
                </args>
            </payloadFactory>
            <property name="messageType" scope="axis2" type="STRING" value="application/xml"/>
            <payloadFactory media-type="xml">
                <format>
                    <AddressOutPutParams xmlns="">
                        <success>true</success>
                        <statusdescription>SUCCESS</statusdescription>
                        <totalSearchResults>$1</totalSearchResults>
                        <Addresses>$2</Addresses>
                    </AddressOutPutParams>
                </format>
                <args>
                    <arg evaluator="xml" expression="$body//jsonObject/totalSearchResults"/>
                    <arg evaluator="xml" expression="$body//jsonObject/Address"/>
                </args>
            </payloadFactory>
            <property name="contentType" scope="default" type="STRING" value="application/xml"/>
        </then>
        <else>
            <log level="full" separator="    POIFixedSearchinsidejsonfilter   "/>
            <propertyGroup>
                <property name="contentType" scope="default" type="STRING" value="application/json"/>
                <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            </propertyGroup>
        </else>
    </filter>
</sequence>
