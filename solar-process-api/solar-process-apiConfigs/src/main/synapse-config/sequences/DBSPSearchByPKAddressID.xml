<?xml version="1.0" encoding="UTF-8"?>
<sequence name="DBSPSearchByPKAddressID" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <property expression="get-property('query.param.addressid')" name="addressid" scope="default" type="STRING"/>
    <propertyGroup>
        <property expression="fn:substring($ctx:addressid, 6, 4)" name="buildingno" scope="default" type="STRING"/>
        <property expression="fn:substring($ctx:addressid, 10, 4)" name="additionalno" scope="default" type="STRING"/>
        <property expression="fn:substring($ctx:addressid, 1, 5)" name="zipcode" scope="default" type="STRING"/>
        <property expression="get-property('query.param.language')" name="language" scope="default" type="STRING"/>
        <property expression="get-property('query.param.regionid')" name="regionid" scope="default" type="STRING"/>
        <property expression="get-property('query.param.cityalias')" name="cityalias" scope="default" type="STRING"/>
        <property expression="get-property('query.param.districtalias')" name="districtalias" scope="default" type="STRING"/>
        <property expression="get-property('query.param.street')" name="street" scope="default" type="STRING"/>
        <property expression="get-property('query.param.streetdistrict')" name="streetdistrict" scope="default" type="STRING"/>
        <property expression="get-property('query.param.cityids')" name="cityids" scope="default" type="STRING"/>
        <property expression="get-property('query.param.districtid')" name="districtid" scope="default" type="STRING"/>
        <property expression="get-property('query.param.page')" name="pageNumber" scope="default" type="STRING"/>
        <property expression="get-property('query.param.pageSize')" name="pageSize" scope="default" type="STRING"/>
        <property expression="get-property('query.param.format')" name="format" scope="default" type="STRING"/>
        <property expression="get-property('query.param.encode')" name="encode" scope="default" type="STRING"/>
    </propertyGroup>
    <propertyGroup>
        <property name="CommonLogFlowId" scope="default" type="STRING" value="PAPISearchByPKAddressID"/>
        <property name="CommonLogInQueue" scope="default" type="STRING" value="GET -/ProcessAPI/searchaddressbypkAddressID"/>
        <property expression="get-property('MessageID')" group="3" name="CommonLogLoggingId" pattern="((urn|uuid):)*(.*)" scope="default" type="STRING"/>
        <property expression="get-property('correlation_id')" name="CommonLogLoggingId2" scope="default" type="STRING"/>
        <property name="CommonLogMessageType" scope="default" type="STRING" value="application/json"/>
        <property name="CommonLogOutQueue" scope="default" type="STRING" value="GET -/ProcessAPI/searchaddressbypkAddressID"/>
    </propertyGroup>
    <log level="full">
        <property name="Entry == " value="Entry"/>
    </log>
    <filter regex="true" source="boolean(get-property('query.param.addressid'))">
        <then/>
        <else>
            <log level="custom">
                <property expression="get-property('query.param.language')" name="lang"/>
            </log>
            <payloadFactory media-type="json">
                <format>{"Message" : "Please enter valid AddressId"}</format>
                <args/>
            </payloadFactory>
            <respond/>
        </else>
    </filter>
    <filter xpath="$ctx:language='E'">
        <then/>
        <else>
            <property name="language" scope="transport" type="STRING" value="A"/>
        </else>
    </filter>
    <payloadFactory media-type="json">
        <format>{&#xd;
	"language": "$1",&#xd;
	"regionid": "$2",&#xd;
	"cityalias": "$3",&#xd;
	"buildingno": "$4",&#xd;
	"additionalno": "$5",&#xd;
	"zipcode": "$6",&#xd;
	"districtalias": "$7",&#xd;
	"street": "$8",&#xd;
	"streetdistrict": "$9",&#xd;
	"cityids": "$10",&#xd;
	"districtid": "$11",&#xd;
	"pageNumber": "$12",&#xd;
	"pageSize": "$13"&#xd;
}</format>
        <args>
            <arg evaluator="xml" expression="get-property('transport', 'language')"/>
            <arg evaluator="xml" expression="$ctx:regionid"/>
            <arg evaluator="xml" expression="$ctx:cityalias"/>
            <arg evaluator="xml" expression="$ctx:buildingno"/>
            <arg evaluator="xml" expression="$ctx:additionalno"/>
            <arg evaluator="xml" expression="$ctx:zipcode"/>
            <arg evaluator="xml" expression="$ctx:districtalias"/>
            <arg evaluator="xml" expression="$ctx:street"/>
            <arg evaluator="xml" expression="$ctx:streetdistrict"/>
            <arg evaluator="xml" expression="$ctx:cityids"/>
            <arg evaluator="xml" expression="$ctx:districtid"/>
            <arg evaluator="xml" expression="$ctx:pageNumber"/>
            <arg evaluator="xml" expression="$ctx:pageSize"/>
        </args>
    </payloadFactory>
    <log level="full" separator=" --Check-- "/>
    <call-template description="Common Log Templete" target="mi-CommonLog">
        <with-param name="flowId" value="{$ctx:CommonLogFlowId}"/>
        <with-param name="inQueue" value="{$ctx:CommonLogInQueue}"/>
        <with-param name="outQueue" value="{$ctx:CommonLogOutQueue}"/>
        <with-param name="loggingId" value="{$ctx:CommonLogLoggingId}"/>
        <with-param name="loggingId2" value="{$ctx:CommonLogLoggingId2}"/>
        <with-param name="messageType" value="{$ctx:CommonLogMessageType}"/>
        <with-param name="contentType" value="application/json"/>
    </call-template>
    <call>
        <endpoint key="DBSPSearchAddressByPKAddressIDSys_EP"/>
    </call>
    <log level="full" separator=" --CheckSysAPIResp-- "/>
    <call-template description="Common Log Templete" target="mi-CommonLog">
        <with-param name="flowId" value="{$ctx:CommonLogFlowId}"/>
        <with-param name="inQueue" value="{$ctx:CommonLogOutQueue}"/>
        <with-param name="outQueue" value="{$ctx:CommonLogInQueue}"/>
        <with-param name="loggingId" value="{$ctx:CommonLogLoggingId}"/>
        <with-param name="loggingId2" value="{$ctx:CommonLogLoggingId2}"/>
        <with-param name="messageType" value="{$ctx:CommonLogMessageType}"/>
        <with-param name="contentType" value="application/json"/>
    </call-template>
    <script language="js"><![CDATA[var payload = mc.getPayloadJSON();

var Parcel=[];



var Parcels = {

 "totalSearchResults": payload.TotalSearchCount,

 "Addresses": Parcel,

 "PostCode": null,

 "success": true,

 "result": null,

 "statusdescription": "SUCCESS",

 "fullexception": null

};



if(Object.keys(payload.Parcel).length > 0)

{

  Parcel = constructParcel();

}



mc.setPayloadJSON(Parcels);



 function constructParcel() {


for (i = 0; i < payload.Parcel.length; ++i)

{

d = payload.Parcel[i];



var data = {

 Title: (null != d.alias? d.alias:"" ),
 Address1: ((null != d.buildingnumber? d.buildingnumber:"")+" "+(null != d.streetname? d.streetname:"")+" - "+(null != d.districtname? d.districtname:"")),
 Address2: ((null != d.cityname? d.cityname:"")+" "+(null != d.zipcode? d.zipcode:"")+(d.additionalnumber != ""? (" - "+d.additionalnumber):"")),
 ObjLatLng: ((null != d.objectid? d.objectid:"")+" "+(null != d.centroidx? d.centroidx:"")+" "+(null != d.centroidy? d.centroidy:"")+" "+(null != d.minx? d.minx:"")+" "+(null != d.miny? d.miny:"")+" "+(null != d.maxx? d.maxx:"")+" "+(null != d.maxy? d.maxy:"")),
 BuildingNumber: ( null != d.buildingnumber?d.buildingnumber :""),
 Street: (null != d.streetname? d.streetname:""),
 District: ( null != d.districtname?d.districtname:""),
 City: ( null != d.cityname?d.cityname:""),
  PostCode: (null != d.zipcode ? d.zipcode :""),
  AdditionalNumber: (null != d.additionalnumber? d.additionalnumber:""),
 RegionName: ( null != d.regionname?d.regionname:""),
 PolygonString: (null != d.polygonwkt? d.polygonwkt:""),
  IsPrimaryAddress: ( null != d.isprimaryaddress?d.isprimaryaddress :""),
  UnitNumber: ( null != d.unitnumber?d.unitnumber :""),
   Latitude: (null != d.centroidy?d.centroidy :""),
  Longitude: (null != d.centroidx?d.centroidx :""),
  CityId: (null != d.cityid? d.cityid:""),
  RegionId: (null != d.regionid? d.regionid:""),
  Restriction: (null != d.restriction? d.restriction:""),  
 PKAddressID: (null != d.PKAddressID? d.PKAddressID:""),
  DistrictID: (null != d.districtid? d.districtid:""),
  Title_L2: ( null != d.alias_E?d.alias_E :""),
  RegionName_L2: ( null != d.regionname_E?d.regionname_E :""),
  City_L2: ( null != d.cityname_E?d.cityname_E :""),
  Street_L2: ( null != d.streetname_E?d.streetname_E :""),
  District_L2: ( null !=d.districtname_E?d.districtname_E :""),
  CompanyName_L2: ( null !=d.companyname_E?d.companyname_E:""),  
 GovernorateID: (null != d.governorateid? d.governorateid:""),
 Governorate: ( null != d.governoratename?d.governoratename :""),
 Governorate_L2: ( null != d.governoratename_E?d.governoratename_E :"")

}

Parcel.push(data);

}

 return Parcel;

}]]></script>
    <log level="full" separator=" --AfterScript-- "/>
    <filter regex="xml" source="$ctx:format">
        <then>
            <payloadFactory media-type="json">
                <format>{&#xd;
    "totalSearchResults": "$1",&#xd;
    "Address": $2,&#xd;
    "PostCode": "$3",&#xd;
    "success": "$4",&#xd;
    "result": "$5",&#xd;
    "statusdescription": "$6",&#xd;
    "fullexception": "$7"&#xd;
}</format>
                <args>
                    <arg evaluator="json" expression="$.totalSearchResults"/>
                    <arg evaluator="json" expression="$.Addresses"/>
                    <arg evaluator="xml" expression="$ctx:PostCode"/>
                    <arg evaluator="xml" expression="$ctx:success"/>
                    <arg evaluator="xml" expression="$ctx:result"/>
                    <arg evaluator="xml" expression="$ctx:statusdescription"/>
                    <arg evaluator="xml" expression="$ctx:fullexception"/>
                </args>
            </payloadFactory>
            <property name="messageType" scope="axis2" type="STRING" value="application/xml"/>
            <payloadFactory media-type="xml">
                <format>
                    <AddressOutPutParams xmlns="">
                        <totalSearchResults>$1</totalSearchResults>
                        <Addresses>$2</Addresses>
                        <PostCode/>
                        <success/>
                        <result/>
                        <statusdescription/>
                        <fullexception/>
                    </AddressOutPutParams>
                </format>
                <args>
                    <arg evaluator="xml" expression="$body//jsonObject/totalSearchResults"/>
                    <arg evaluator="xml" expression="$body//jsonObject/Address"/>
                </args>
            </payloadFactory>
            <property name="contentType" scope="default" type="STRING" value="application/xml"/>
        </then>
        <else>
            <log level="full" separator=" --JSON-- "/>
            <propertyGroup>
                <property name="contentType" scope="default" type="STRING" value="application/json"/>
                <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            </propertyGroup>
        </else>
    </filter>
</sequence>
